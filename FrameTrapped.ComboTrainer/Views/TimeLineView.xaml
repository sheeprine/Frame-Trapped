<Grid
    x:Class="FrameTrapped.ComboTrainer.Views.TimeLineView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"  
    xmlns:converters="clr-namespace:FrameTrapped.Common.Converters;assembly=FrameTrapped.Common"
    xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
     Width="254">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/MergedCommonResources.xaml"/>
                <ResourceDictionary>
                    <Style x:Key="TimeLineMenuItemStyle" TargetType="MenuItem">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Canvas.Height" Value="48"/>
                        <Setter Property="Canvas.Width" Value="48"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <converters:EnumBooleanConverter x:Key="enumBooleanConverter"/>
            <converters:BoolToCollapsedConverter x:Key="boolToCollapsedConverter" />
            <converters:BoolToVisibleConverter x:Key="boolToVisibleConverter" />
            
        </ResourceDictionary>
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition  Height="Auto"/>
    </Grid.RowDefinitions>

    <DockPanel Grid.Row="0">
        <!--Playback functions-->
        <Menu DockPanel.Dock="Top" ToolBarTray.IsLocked="True"
              HorizontalAlignment="Center">
            <MenuItem
                Style="{StaticResource TimeLineMenuItemStyle}"
                ToolTip="Add Time Line Item">
                <MenuItem.Header>
                    <Viewbox Child="{StaticResource appbar_list_add}"/>
                </MenuItem.Header>
                <MenuItem Header="Empty" cal:Message.Attach="[Action AddTimeLineItem('Empty')]" />
                <MenuItem Header="Dashes">
                    <MenuItem Header="Dash" cal:Message.Attach="[Action AddTimeLineItem('Dash')]"/>
                    <MenuItem Header="Backdash" cal:Message.Attach="[Action AddTimeLineItem('Backdash')]"/>
                    <MenuItem Header="FADC" cal:Message.Attach="[Action AddTimeLineItem('FADC')]"/>
                    <MenuItem Header="FADC Back" cal:Message.Attach="[Action AddTimeLineItem('FADCB')]"/>
                </MenuItem>
                <MenuItem Header="Shoto Motions">
                    <MenuItem Header="Quarter Circle Forward"  cal:Message.Attach="[Action AddTimeLineItem('QCF')]"/>
                    <MenuItem Header="Quarter Circle Back"  cal:Message.Attach="[Action AddTimeLineItem('QCB')]"/>

                    <MenuItem Header="Half Circle Forward"  cal:Message.Attach="[Action AddTimeLineItem('HCF')]"/>
                    <MenuItem Header="Half Circle Back"  cal:Message.Attach="[Action AddTimeLineItem('HCB')]"/>

                    <MenuItem Header="Half Circle Up (Chicken Wing)"  cal:Message.Attach="[Action AddTimeLineItem('HCFU')]"/>

                    <MenuItem Header="Dragon Punch"  cal:Message.Attach="[Action AddTimeLineItem('DP')]"/>
                    <MenuItem Header="Reverse Dragon Punch"  cal:Message.Attach="[Action AddTimeLineItem('RDP')]"/>

                    <MenuItem Header="Super Motion"  cal:Message.Attach="[Action AddTimeLineItem('Super')]"/>
                    <MenuItem Header="Reverse Super Motion"  cal:Message.Attach="[Action AddTimeLineItem('ReverseSuper')]"/>
                </MenuItem>
                <MenuItem Header="Charge Inputs">
                    <MenuItem Header="Charge Down" cal:Message.Attach="[Action AddTimeLineItem('ChargeD55')]"/>
                    <MenuItem Header="Charge Back" cal:Message.Attach="[Action AddTimeLineItem('ChargeB55')]"/>
                    <MenuItem Header="Charge Downback" cal:Message.Attach="[Action AddTimeLineItem('ChargeDB55')]"/>
                    <MenuItem Header="Charge Super/Ultra" cal:Message.Attach="[Action AddTimeLineItem('ChargeSuper')]"/>
                    <MenuItem Header="Charge Delta" cal:Message.Attach="[Action AddTimeLineItem('ChargeDelta')]"/>
                </MenuItem>
                <MenuItem Header="Grapler Commands">
                    <MenuItem Header="Spinning Piledriver" cal:Message.Attach="[Action AddTimeLineItem('SPD')]"/>
                    <MenuItem Header="Reverse Spinning Piledriver" cal:Message.Attach="[Action AddTimeLineItem('SPDB')]"/>
                    <MenuItem Header="Full Circle" cal:Message.Attach="[Action AddTimeLineItem('FullCircle')]"/>
                    <MenuItem Header="Double Circle Super/Ultra" cal:Message.Attach="[Action AddTimeLineItem('DoubleCircle')]"/>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="RemoveTimeLineItem"
                      IsEnabled="{Binding CanRemoveItem}" 
                      Style="{StaticResource TimeLineMenuItemStyle}"
                      ToolTip="Remove Time Line Item">
                <MenuItem.Header>
                    <Viewbox Child="{StaticResource appbar_list_delete}"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem x:Name="ClearTimeLine" 
                      IsEnabled="{Binding CanRemoveItem}"
                      Style="{StaticResource TimeLineMenuItemStyle}"
                      ToolTip="Clear Time Line">
                <MenuItem.Header>
                    <Viewbox Child="{StaticResource appbar_stop}"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem x:Name="SendInputs"
                      IsCheckable="True"
                      IsChecked="{Binding SendInputs}"
                      Style="{StaticResource TimeLineMenuItemStyle}"
                      ToolTip="Send Inputs">
                <MenuItem.Header>
                    <Viewbox Child="{StaticResource appbar_interface_button}"/>
                </MenuItem.Header>
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Top" DataContext="{Binding SelectedTimeLineItem}">
            <Grid DataContext="{Binding InputItemViewModel}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.ColumnSpan="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                    </Grid.ColumnDefinitions>
                    <UniformGrid Rows="3" Columns="3" 
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center" >
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpBack}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="9" Y="8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionUpBack}" Style="{StaticResource DirectionRectangleStyle}" />
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Up}">
                            <Rectangle Fill="{DynamicResource DirectionUp}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpForward}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="-9" Y="8" />
                            </RadioButton.RenderTransform>
                            <Rectangle  Fill="{DynamicResource DirectionUpForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Back}">
                            <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Neutral}">
                            <RadioButton.RenderTransform>
                                <ScaleTransform ScaleX="1.05" CenterX="24" 
                                         ScaleY="1.05" CenterY="24"/>
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionNeutral}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Forward}">
                            <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource DirectionRectangleStyle}" />
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownBack}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="9" Y="-8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionDownBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Down}">
                            <Rectangle Fill="{DynamicResource DirectionDown}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownForward}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="-9" Y="-8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionDownForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                    </UniformGrid>
                    <UniformGrid Grid.Column="1" Rows="2" Columns="3" 
                                 HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ToggleButton IsChecked="{Binding Light_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Medium_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Hard_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Light_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Medium_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Hard_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>

                    </UniformGrid>
                </Grid>
                <DockPanel Grid.Row="1" Margin="2" >
                    <Button x:Name="DecrementFrames" DockPanel.Dock="Left" Style="{StaticResource MetroCircleButtonStyle}" >
                        <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource ButtonRectangleStyle}"/>
                    </Button>
                    <Button x:Name="IncrementFrames" DockPanel.Dock="Right" Style="{StaticResource MetroCircleButtonStyle}" >
                        <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource ButtonRectangleStyle}"/>
                    </Button>

                    <Slider HorizontalAlignment="Stretch" Value="{Binding WaitFrames,FallbackValue=1}" Style="{DynamicResource SliderStyle}" Maximum="300" Minimum="1" />

                </DockPanel>
            </Grid>
        </Grid>
        
        <!--Input Item List-->
        <ListBox x:Name="TimeLineItems" SelectionMode="Single" IsSynchronizedWithCurrentItem="True" 
                 SelectedItem="{Binding SelectedTimeLineItem}" 
                 ItemContainerStyle="{DynamicResource TimeLineItemContainerStyle}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"></StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="1">
                        <ContentControl cal:View.Model="{Binding}" />
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</Grid>
  
 