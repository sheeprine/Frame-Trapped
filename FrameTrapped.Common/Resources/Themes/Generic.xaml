<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:cal="http://www.caliburnproject.org">
    
    <Style x:Key="CommonWindowStyle" TargetType="{x:Type controls:MetroWindow}">
        <Setter Property="Icon" Value="pack://application:,,,/FrameTrapped.Common;component/Resources/Icons/Logo.ico" />
    </Style>

    <Style x:Key="HomeViewButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="256"/>
        <Setter Property="Margin" Value="16" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="8" />
        <Setter Property="Foreground" Value="{DynamicResource Brush}"/>
        <Setter Property="FontWeight" Value="Medium" />
    </Style>

    <Style x:Key="HeaderButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}" >
        <Setter Property="Margin" Value="6" /> 
    </Style>
    
    <Style x:Key="HeaderDockPanelStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="{DynamicResource ThemeColorBrush}"/>
    </Style>

    <Style x:Key="MediumTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!-- Horizontal Tab Item -->
    <Style x:Key="HorizontalTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="25"
                            Background="{DynamicResource AccentColorBrush3}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="grdborder" BorderBrush="{TemplateBinding BorderBrush}"  CornerRadius="2" BorderThickness="0,6,0,0" Margin="3,-1,3,0"/>
                        <Viewbox Width="120"  Height="28" Stretch="Fill" StretchDirection="DownOnly">
                            <Path x:Name="TabPath" />
                        </Viewbox>
                        <ContentPresenter Grid.Column="0"
                                            Margin="10,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource LightForegroundBrush}" TargetName="grdborder"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource IdealForegroundColorBrush}" TargetName="grdborder"/>
                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}"  TargetName="grdborder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Vertical Tab Item -->
    <Style x:Key="VerticalTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Width="25"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="grdborder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="6,0,0,0" Margin="-1,3,0,3"/>
                        <Viewbox Width="28"  Height="120" Stretch="Fill" StretchDirection="DownOnly">
                            <Path x:Name="TabPath" />
                        </Viewbox>
                        <ContentPresenter Grid.Column="0"
                                            Margin="0,10"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource LightForegroundBrush}" TargetName="grdborder"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeColorBrush}" TargetName="grdborder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Horizontal Tab Text -->
    <Style x:Key="HorizontalTabTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!-- Vertical Tab Text -->
    <Style x:Key="VerticalTabTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Street Fighter Frame Data Library -->
    <Style x:Key="HorizontalExpanderHeaderTextBlockStyle" BasedOn="{StaticResource HorizontalTabTextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="VerticalExpanderHeaderTextBlockStyle" BasedOn="{StaticResource VerticalTabTextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="FighterHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="StatItemStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="StatNameHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}" />

    <Style x:Key="LinkableMovesDataGridStyle" BasedOn="{StaticResource DataGridStyle}" TargetType="{x:Type DataGrid}" >
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
                                <MenuItem Header="Add To Player 1 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 1)" />
                                <MenuItem Header="Add To Player 2 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 2)" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="AutoGenerateColumns"  Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FrozenColumnCount" Value="2" />
        <Setter Property="AlternationCount"  Value="2" />
        <Setter Property="AlternatingRowBackground" Value="Black" />
        <Setter Property="SelectedItem" Value="{Binding SelectedMove, Mode=OneWayToSource}" />
    </Style>

    <Style x:Key="MoveListGroupStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                            </StackPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <ItemsPresenter />
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoveListRowStyle" TargetType="DataGridRow">
        <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
                    <MenuItem Header="Add To Player 1 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 1)" />
                    <MenuItem Header="Add To Player 2 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 2)" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboTrainer / TimeLine -->
    <Style x:Key="TimeLineItemContainerStyle"  TargetType="{x:Type ListBoxItem}">
        <Setter Property="Width" Value="254"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                         Color="{DynamicResource HighlightColor}"/>
        </Style.Resources>
    </Style>

    <RadialGradientBrush x:Key="ButtonBackgroundBrush">
        <GradientStop Color="White" Offset="0.75"/>
        <GradientStop Color="LightGray" Offset="1"/>
    </RadialGradientBrush>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
    </Style>


    <Style x:Key="CustomToggle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
        <Setter Property="Margin" Value="-2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="42" />
        <Setter Property="Height" Value="42" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
    </Style>

    <Style x:Key="CustomButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
    </Style>

    <Style x:Key="DirectionRectangleStyle" TargetType="{x:Type Rectangle}"  >
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Opacity" 
            Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},
            Path=IsChecked, Converter={StaticResource boolToOpacityConverter}}"/>
    </Style>
    
    <Style x:Key="MediumDirectionRectangleStyle" BasedOn="{StaticResource DirectionRectangleStyle}" TargetType="{x:Type Rectangle}"  >
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <Style x:Key="ButtonRectangleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="InputRectangleStyle" TargetType="{x:Type Rectangle}"  >
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Opacity" 
                        Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked, Converter={StaticResource boolToOpacityConverter}}"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <Style x:Key="MediumInputRectangleStyle" BasedOn="{StaticResource InputRectangleStyle}" TargetType="{x:Type Rectangle}"  >
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <!-- Options -->
    <Style x:Key="OptionBorderBase" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseColorBrush}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Margin" Value="4" />
    </Style>

    <Style x:Key="OptionDescriptionBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource OptionBorderBase}">
        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
        <Setter Property="Background" Value="{DynamicResource GradientBackgroundColor}" />
    </Style>

    <Style x:Key="OptionValueBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource OptionBorderBase}">
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
    </Style>

</ResourceDictionary>